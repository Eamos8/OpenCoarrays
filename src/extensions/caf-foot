usage()
{
    cmd=`basename $0`
    echo ""
    echo " $cmd - Fortran compiler wrapper for OpenCoarrays"
    echo ""
    echo " Usage: $cmd <fortran-source-file> [options] ..."
    echo ""
    echo " Options:"
    echo "   --help, -h           Show this help message"
    echo "   --version, -v, -V    Report version and copyright information"
    echo "   --wrapping, -w,      Report the name of the wrapped compiler"
    echo ""
    echo " Example usage:"
    echo ""
    echo "   $cmd foo.f90 -o foo"
    echo "   $cmd -v"
    echo "   $cmd --help"
    echo ""
    echo " Version $caf_version Restrictions:"
    echo "   1. If any of the options listed above apear, any remaining arguments are ignored."
    echo "   2. If present, <fortran-source-file>,"
    echo "      a. must be a Fortran source file," 
    echo "      b. must appear before all other arguments,"
    echo "      c. must be the only Fortran source file in the argument list,"
    echo "      d. must have a name of the form *.f90, *.F90, *.f, or *.F. "
    echo "   3. The environment variable 'FC' must be empty or point to a Fortran compiler/linker. "
    echo "   4. If 'FC' is empty, a default value of 'mpif90' is used. "
    echo "   5. Each scope containing CAF source must include one or more 'use opencoarrays' statements."
    echo "   6. The only CAF statements or expressions are"
    echo "      a. 'num_images()' "
    echo "      b. 'this_image()' with or without arguments"
    echo "      c. 'sync all' with or without arguments."
    echo "      d. 'sync images' with or without arguments."
    echo "      e. 'error stop' without arguments."
    echo "      f. 'co_sum', 'co_max', 'co_min', or 'co_reduce'"
    echo "      f. 'put' or 'get'"
    echo "   7. Coarray codimensions must either be"
    echo "      a. replaced by an invocation of 'get' in expressions."
    echo "      b. replaced by an invocation of 'put' on the left-hand side of assignments."
    echo ""
    echo " The caf wrapper will append -L, -l, and -fcoarray arguments "
    echo " with values that get set during the OpenCoarrays build process."
    echo ""

    exit 1
}

# Print useage information if caf is invoked without arguments
if [ $# == 0 ]; then
  usage
fi

# Default to "mpif90" Fortran compiler if environment variable FC has zero length:
if [ -z "$FC" ]; then
   FC=mpif90
fi

# TODO -- improve the syntax of the "set" command below to accepted an unlimited number of arguments
max_arguments=100
link_args="-fcoarray=lib -lcaf_mpi"

if [[ $1 == '-v' || $1 == '-V' || $1 == '--version' ]]; then
    echo ""
    echo "OpenCoarrays Coarray Fortran Compiler Wrapper (caf version $caf_version)"
    echo "Copyright (C) 2015 Sourcery, Inc."
    echo ""
    echo "OpenCoarrays comes with NO WARRANTY, to the extent permitted by law."
    echo "You may redistribute copies of OpenCoarrays under the terms of the"
    echo "BSD 3-Clause License.  For more information about these matters, see"
    echo "the file named COPYRIGHT-BSD3."
    echo ""
elif [ "$caf_compiler" = "true" ]; then
  # Nothing to do other than invoke the compiler with all the command-line arguments:
  $FC "$@" -L $caf_lib_dir $link_args
else
  # Verify that a file with the .f90, .F90, .f, or .F extension is the first argument:
  src_extension=`echo "$1" | cut -f2 -d'.'`
  if [[ $src_extension == 'f90' || $src_extension == 'F90' || $src_extension == 'f' || $src_extension == 'F' ]]; then
    # copy the source file into a new file for pre-processing (preprending "caf-" to the new file name):
    cp $1 caf-$1
    # Edit the copied source to replace CAF syntax with calls to public procedures in opencoarrays.f90:
    if [ "$linux" = "true" ]; then
      sed -i'' 's/sync all/call sync_all/g' caf-$1
      sed -i'' 's/error stop/call error_stop/g' caf-$1
      sed -i'' 's/sync images/call sync_images/g' caf-$1
    else
      # This works on OS X and other POSIX-compliant operating systems:
      sed -i '' 's/sync all/call sync_all/g' caf-$1
      sed -i '' 's/error stop/call error_stop/g' caf-$1
      sed -i '' 's/sync images/call sync_images/g' caf-$1
    fi
    # Replace the file name in command-line argment 1 with the new name beofre invoking the compiler:
    set -- "caf-$1" "${@:2:max_arguments}"
    # Invoke the compiler along with all command-line arguments:
    $FC "$@" -L $caf_lib_dir -I $caf_mod_dir $link_args
  elif [[ $1 == '-w' || $1 == '--wrapping' ]]; then
    echo "caf wraps FC=$FC"
  elif [[ $1 == '-h' || $1 == '--help' ]]; then
    usage
  else
    usage
  fi
fi
